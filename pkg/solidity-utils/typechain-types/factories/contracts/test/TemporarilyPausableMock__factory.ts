/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TemporarilyPausableMock,
  TemporarilyPausableMockInterface,
} from "../../../contracts/test/TemporarilyPausableMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pauseWindowDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodDuration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyUnPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "BufferPeriodExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxBufferPeriodDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxPauseWindowDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "PauseWindowExpired",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "getBufferPeriodEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxBufferPeriodDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxPauseWindowDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getPauseWindowEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516104bb3803806104bb83398101604081905261002f916100a5565b8181630163f50082111561005657604051632536d4ff60e21b815260040160405180910390fd5b6276a70081111561007a576040516352b7e03760e11b815260040160405180910390fd5b600061008683426100c9565b6080819052905061009782826100c9565b60a052506100f09350505050565b600080604083850312156100b857600080fd5b505080516020909101519092909150565b808201808211156100ea57634e487b7160e01b600052601160045260246000fd5b92915050565b60805160a0516103936101286000396000818160f601528181610128015261016f01526000818160c6015261022e01526103936000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806388f1d2041161005b57806388f1d204146100b15780638a8d123a146100c4578063cd43a4d5146100ea578063cd51c12f146100f457600080fd5b80633f4ba83a146100825780635c975abb1461008c5780638456cb59146100a9575b600080fd5b61008a61011a565b005b610094610124565b60405190151581526020015b60405180910390f35b61008a61015d565b6276a7005b6040519081526020016100a0565b7f00000000000000000000000000000000000000000000000000000000000000006100b6565b630163f5006100b6565b7f00000000000000000000000000000000000000000000000000000000000000006100b6565b610122610165565b565b60007f00000000000000000000000000000000000000000000000000000000000000004211158015610158575060005460ff165b905090565b610122610224565b61016d6102e0565b7f000000000000000000000000000000000000000000000000000000000000000042106101c6576040517f7f54044100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b61022c61031e565b7f00000000000000000000000000000000000000000000000000000000000000004210610285576040517f163ef76500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589060200161021a565b6102e8610124565b610122576040517f0a976e8b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610326610124565b15610122576040517f1785c68100000000000000000000000000000000000000000000000000000000815260040160405180910390fdfea2646970667358221220c45add8870bef43c00c33322201fa8765bde5dbd18d2999bc2e0b730dacf7f0a64736f6c63430008120033";

type TemporarilyPausableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TemporarilyPausableMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TemporarilyPausableMock__factory extends ContractFactory {
  constructor(...args: TemporarilyPausableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    pauseWindowDuration: PromiseOrValue<BigNumberish>,
    bufferPeriodDuration: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TemporarilyPausableMock> {
    return super.deploy(
      pauseWindowDuration,
      bufferPeriodDuration,
      overrides || {}
    ) as Promise<TemporarilyPausableMock>;
  }
  override getDeployTransaction(
    pauseWindowDuration: PromiseOrValue<BigNumberish>,
    bufferPeriodDuration: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      pauseWindowDuration,
      bufferPeriodDuration,
      overrides || {}
    );
  }
  override attach(address: string): TemporarilyPausableMock {
    return super.attach(address) as TemporarilyPausableMock;
  }
  override connect(signer: Signer): TemporarilyPausableMock__factory {
    return super.connect(signer) as TemporarilyPausableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TemporarilyPausableMockInterface {
    return new utils.Interface(_abi) as TemporarilyPausableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TemporarilyPausableMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TemporarilyPausableMock;
  }
}
